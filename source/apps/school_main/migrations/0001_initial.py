# Generated by Django 4.2 on 2023-10-09 05:47

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('class_name', models.CharField(max_length=20, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(14)])),
                ('year_of_foundation', models.CharField(max_length=4, validators=[django.core.validators.MinLengthValidator(4)])),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes',
                'db_table': 'class',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('gender_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=6, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('parent_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('mother_full_name', models.CharField(max_length=50, null=True)),
                ('father_full_name', models.CharField(max_length=50, null=True)),
                ('responsible_person', models.CharField(max_length=50, null=True)),
                ('mother_contact_phone', models.CharField(max_length=15, null=True, validators=[django.core.validators.MinLengthValidator(7)])),
                ('father_contact_phone', models.CharField(max_length=15, null=True, validators=[django.core.validators.MinLengthValidator(7)])),
                ('rp_contact_phone', models.CharField(max_length=15, null=True, validators=[django.core.validators.MinLengthValidator(7)])),
                ('comment', models.TextField(null=True)),
                ('address', models.CharField(max_length=50)),
                ('date_of_create', models.DateTimeField(auto_now_add=True)),
                ('date_of_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'parent',
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('profession_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subject_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('teacher_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField(null=True)),
                ('is_classroom', models.BooleanField(null=True)),
                ('phone', models.CharField(max_length=15, null=True, validators=[django.core.validators.MinLengthValidator(7)])),
                ('is_active', models.BooleanField(default=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_of_create', models.DateTimeField(auto_now_add=True)),
                ('date_of_update', models.DateTimeField(auto_now=True)),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='school_main.gender')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='school_main.subject')),
            ],
            options={
                'db_table': 'teacher',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_graduated', models.BooleanField(default=False)),
                ('year_of_graduate', models.CharField(max_length=4, null=True, validators=[django.core.validators.MinLengthValidator(4)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_of_create', models.DateTimeField(auto_now_add=True)),
                ('date_of_update', models.DateTimeField(auto_now=True)),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='school_main.gender')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='school_main.parent')),
            ],
            options={
                'db_table': 'student',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('staff_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField(null=True)),
                ('phone', models.CharField(max_length=15, null=True, validators=[django.core.validators.MinLengthValidator(7)])),
                ('is_active', models.BooleanField(default=True)),
                ('comment', models.TextField(null=True)),
                ('date_of_create', models.DateTimeField(auto_now_add=True)),
                ('date_of_update', models.DateTimeField(auto_now=True)),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='school_main.gender')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='school_main.profession')),
            ],
            options={
                'db_table': 'staff',
            },
        ),
        migrations.CreateModel(
            name='ClassSubject',
            fields=[
                ('class_subject_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('class_name', models.ForeignKey(db_column='class_name', on_delete=django.db.models.deletion.DO_NOTHING, to='school_main.class')),
                ('subject_id', models.ForeignKey(db_column='subject_id', on_delete=django.db.models.deletion.DO_NOTHING, to='school_main.subject')),
            ],
            options={
                'db_table': 'class_subject',
                'unique_together': {('subject_id', 'class_name')},
            },
        ),
        migrations.CreateModel(
            name='ClassStudent',
            fields=[
                ('class_student_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('class_name', models.ForeignKey(db_column='class_name', on_delete=django.db.models.deletion.DO_NOTHING, to='school_main.class')),
                ('student_id', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.DO_NOTHING, to='school_main.student')),
            ],
            options={
                'db_table': 'class_student',
                'unique_together': {('student_id', 'class_name')},
            },
        ),
        migrations.AddField(
            model_name='class',
            name='classroom_teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='school_main.teacher'),
        ),
        migrations.AddField(
            model_name='class',
            name='students',
            field=models.ManyToManyField(related_name='class_student_set', through='school_main.ClassStudent', to='school_main.student'),
        ),
        migrations.AddField(
            model_name='class',
            name='subjects',
            field=models.ManyToManyField(related_name='class_subject_set', through='school_main.ClassSubject', to='school_main.subject'),
        ),
    ]
